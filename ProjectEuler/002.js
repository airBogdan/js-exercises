// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
//     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence that do not exceed the nth term, find the sum of the even-valued terms.

function fiboEvenSum1(n) {
    let a = 1, b = 2, sum = 2, i = 2
    // i = nr of fibonacci numbers so far, we start with 2 because we have a=1, and b=2
    while (i < n) {
        if (i % 2 === 0) {
            //use this to change a and b per turn, not both of them at once
            a = a + b
            if (a % 2 === 0)  sum+= a
        }
        else {
            b = b + a
            if (b % 2 === 0) sum+= b
        }
        i++
    }

    return sum

}
console.log('1', fiboEvenSum1(10))

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
//     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function fiboEvenSum2(maxVal) {
    let a = 1, b = 2, sum = 2, i = 2
    // i = nr of fibonacci numbers so far, we start with 2 because we have a=1, and b=2
    while (a < maxVal && b < maxVal) {
        if (i % 2 === 0) {
            //use this to change a and b per turn, not both of them at once
            a = a + b
            if (a % 2 === 0)  sum+= a
        }
        else {
            b = b + a
            if (b % 2 === 0) sum+= b
        }
        i++
    }
    return sum
}
console.log('2', fiboEvenSum2(4000000))
